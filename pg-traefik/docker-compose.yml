version: "3"

services:

  # Reverse proxy helper
#  reverse-proxy-https-helper:
#    image: alpine
#    command: sh -c "cd /etc/ssl/traefik
#      && wget traefik.me/cert.pem -O cert.pem
#      && wget traefik.me/privkey.pem -O privkey.pem"
#    volumes:
#      - certs:/etc/ssl/traefik
#    networks:
#      - dev
  # Reverse proxy helper generate letsencrypt certificate
  reverse-proxy-https-helper:
    image: almalinux
    container_name: proxy
    command:
      - sh
      - -c
      - |
        tail -f /dev/null
    volumes:
        - certs:/etc/ssl/traefik
        - ./letsencrypt:/etc/letsencrypt
    networks:
        - dev

  # TRAEFIK
  traefik:
    restart: unless-stopped
    image: traefik:v2.10
    container_name: traefik
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    
    labels:
      - "traefik.http.services.traefik.loadbalancer.server.port=8080"
      - "traefik.http.routers.traefik.rule=Host(`local.traefik.me`)"
      - "traefik.http.routers.traefik.entrypoints=https"

    volumes:
      - ./traefik.yml:/etc/traefik/traefik.yml
      - ./tls.yml:/etc/traefik/tls.yml
      - /var/run/docker.sock:/var/run/docker.sock
      - certs:/etc/ssl/traefik
    networks:
      - dev
    depends_on:
      - reverse-proxy-https-helper

  # APPLICATIONS
  
  nginx:
    image: nginx:latest
    container_name: nginx
    labels:
      - "traefik.http.routers.nginx.rule=Host(`nginx.traefik.me`)"
      - "traefik.http.routers.nginx-tls.tls.domains[0].main=nginx.traefik.me"
      - "traefik.http.routers.nginx-tls.tls=true"
      - "traefik.http.routers.nginx-tls.entrypoints=https"
    networks:
      - dev
  app1:
    image: containous/whoami
    container_name: app1
    labels:
      - "traefik.http.routers.app1.rule=Host(`app1.traefik.me`)"
      - "traefik.http.routers.app1-tls.tls.domains[0].main=app1.traefik.me"
      - "traefik.http.routers.app1-tls.tls=true"
      - "traefik.http.routers.app1-tls.entrypoints=https"
    networks:
      - dev

volumes:
  certs:

networks:
  dev: